---
name: Test

"on":
  push:
    paths-ignore:
      - 'docs/**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
    - name: Setup a local virtual environment (if no poetry.toml file)
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local
    - uses: actions/cache@v4
      name: Define a cache for the virtual environment based on the dependencies lock file
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies
      run: |
        poetry install -v -E torque --with dev
    - name: Run unit tests
      run: |
        poetry run pytest
    - name: Analyze the code with pylint
      run: |
        poetry run pylint src/pyrosimple/
  test-unsupported: # Continue to check unsupported python version until there's a strong reason to drop them
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.7", "3.8"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
    - name: Setup a local virtual environment (if no poetry.toml file)
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local
    - uses: actions/cache@v4
      name: Define a cache for the virtual environment based on the dependencies lock file
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies
      run: |
        poetry install -v -E torque --with dev
    - name: Run unit tests
      run: |
        poetry run pytest
    - name: Analyze the code with pylint
      run: |
        poetry run pylint src/pyrosimple/
