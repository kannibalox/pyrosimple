[tool.poetry]
name = "pyrosimple"
version = "2.11.4"
description = "A stripped-down version of the pyrocore tools for working with rTorrent"
authors = ["kannibalox <kannibalox@gmail.com>"]
repository = "https://github.com/kannibalox/pyrosimple"
documentation = "https://kannibalox.github.io/pyrosimple/"
readme = "README.md"
license = "GPL-3.0-or-later"
classifiers = [
        "Development Status :: 4 - Beta",
        "Environment :: Console",
        "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
        "Natural Language :: English",
        "Operating System :: POSIX",
        "Programming Language :: Python :: 3 :: Only",
        "Programming Language :: Python :: 3.7",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Topic :: Communications :: File Sharing",
        "Topic :: Software Development :: Libraries :: Python Modules",
        "Topic :: Utilities",
]
packages = [
         {include = "pyrosimple", from = "src"},
         {include = "pyrosimple/py.typed", from = "src"},
]

[tool.poetry.dependencies]
python = ">=3.7.2,<4"
"bencode.py" = "^4.0.0"
APScheduler = {version = "^3.9.0", optional = true}
Jinja2 = "^3.1.0"
python-daemon = "^3.0.1"
importlib-resources = { version = "^5.4.0", python = "<3.9" }
parsimonious = "^0.10.0"
prometheus-client = "^0.16.0"
prompt-toolkit = "^3.0.30"
requests = "^2.28.1"
shtab = "^1.5.5"
inotify = {version = "^0.2.10", optional = true}
python-box = "^7.0.0"
tomli = { version = "^2.0.1",  python = "<3.11" }
tomli-w = "^1.0.0"
importlib-metadata = {version = "6.7.0", python = "3.7"}

[tool.poetry.extras]
torque = ["APScheduler", "inotify"]

[tool.poetry.scripts]
rtxmlrpc = "pyrosimple.scripts.rtxmlrpc:run"
rtcontrol = "pyrosimple.scripts.rtcontrol:run"
lstor = "pyrosimple.scripts.lstor:run"
chtor = "pyrosimple.scripts.chtor:run"
mktor = "pyrosimple.scripts.mktor:run"
pyrotorque = "pyrosimple.scripts.pyrotorque:run"
pyroadmin = "pyrosimple.scripts.pyroadmin:run"

[tool.poetry.group.dev]
optional = true
[tool.poetry.group.dev.dependencies]
coverage = "^7.0.5"
pylint = "^2.15.7"
pytest = "^7.0.1"
typing-extensions = "^4.1.1"
black = "^23.1.0"
isort = "^5.10.1"
mypy = "^1.1.1"

[tool.poetry.group.docs]
optional = true
[tool.poetry.group.docs.dependencies]
mkdocs = "^1.3.0"
mkdocs-material = "^9.0.4"
mkdocs-include-markdown-plugin = "^3.8.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pylint]
[tool.pylint.'message control']
disable="locally-disabled, no-else-return, too-many-arguments, logging-format-interpolation, too-few-public-methods, protected-access, duplicate-code, consider-using-f-string, fixme, invalid-name, line-too-long, design, too-many-lines, superfluous-parens"
[tool.pylint.refactoring]
max-nested-blocks = 10

[tool.black]
include = '\.py$'
extend-exclude = '''
^/docs
'''

[tool.isort]
profile = "black"
force_single_line = false
atomic = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
extend_skip = "docs/"
remove_redundant_aliases = true

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
exclude = [
    '/data/'
]

[tool.pytest.ini_options]
testpaths = ["src/tests"]

[tool.coverage.run]
omit = ["src/tests/*"]
